name: Update EditorConfig
description: "Checks out and updates .editorconfig in the given repository"
inputs:
  owner:
    description: "Repository owner"
    required: false
    default: ${{ github.actor }}
  repository:
    description: "Repository name"
    required: true
  committer:
    description: "Committer username"
    required: false
    default: "github-actions[bot]"
  pr-token:
    description: "Pull request token"
    required: true
  token:
    description: "Checkout token"
    required: true
  automerge:
    description: "Required false in private repositories unless you have a GitHub subscription"
    required: false
    default: "true"
runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v5
      with:
        repository: ${{ inputs.owner }}/${{ inputs.repository }}
        token: ${{ inputs.token }}
        path: ${{ inputs.repository }}
    - name: Get default branch name
      working-directory: ${{ inputs.repository }}
      id: branch
      shell: sh
      run: |
        echo "default=$(git branch --show-current)" >> "$GITHUB_OUTPUT"
    - name: Update .editorconfig
      working-directory: ${{ inputs.repository }}
      shell: sh
      run: |
        if git push -d origin update-editorconfig; then
          sleep 5 # Wait for PR to be deleted / API to catch up
        fi
        git switch -c update-editorconfig
        cp ../.editorconfig .
    - name: Commit changes
      id: commit-changes
      uses: anttiharju/actions/commit-changes@v0
      with:
        working-directory: ${{ inputs.repository }}
        committer: ${{ inputs.committer }}
        message: |
          ${{ github.event.head_commit.message }}

          This is an automated update of .editorconfig to
          https://github.com/${{ github.repository }}/blob/${{ github.sha }}/.editorconfig
    - if: steps.commit-changes.outputs.changed == 'true'
      name: Create Pull Request
      id: pr
      working-directory: ${{ inputs.repository }}
      shell: sh
      env:
        GH_TOKEN: ${{ inputs.token }}
        default_branch: ${{ steps.branch.outputs.default }}
      run: |
        pr_open=$(gh pr list --head update-editorconfig --json state --jq '.[0].state')

        if [ "$pr_open" = "OPEN" ]; then
          echo "PR already exists"
        else
          pr_url=$(gh pr create \
            --fill \
            --base "$default_branch" \
            --head update-editorconfig)

          echo "url=$pr_url" >> "$GITHUB_OUTPUT"
          echo "created=true" >> "$GITHUB_OUTPUT"
        fi
    - if: steps.pr.outputs.created == 'true' && inputs.automerge == 'true'
      name: Enable auto-merge
      working-directory: ${{ inputs.repository }}
      shell: sh
      env:
        GH_TOKEN: ${{ inputs.pr-token }}
        pr_url: ${{ steps.pr.outputs.url }}
      run: |
        gh pr merge "$pr_url" --squash --auto
    - if: steps.pr.outputs.created == 'true' && inputs.automerge == 'false'
      name: Merge
      working-directory: ${{ inputs.repository }}
      shell: sh
      env:
        GH_TOKEN: ${{ inputs.pr-token }}
        pr_url: ${{ steps.pr.outputs.url }}
      run: |
        gh pr merge "$pr_url" --squash
